import java.util.Arrays;
import java.util.Hashtable;
import java.util.Scanner;

public class friend-network {
 static int[] parent;
 static int[] size;

  public static int findSet(int i) {
  if (parent[i] == i)
   return i;
  return findSet(parent[i]);
 }

  public static boolean isSameSet(int i, int j) {
  return findSet(i) == findSet(j);
 }

  public static void union(int i, int j) {
  if(!isSameSet(i, j)){
  size[findSet(j)] += size[findSet(i)];
  parent[findSet(i)] = findSet(j);
  }
 }

  public static void main(String[] args) {
  Scanner in = new Scanner(System.in);
  int t = Integer.parseInt(in.nextLine());
  parent = new int[100000];
  size = new int[100000];
  for (int i = 0; i < t; i++) {
   int n = Integer.parseInt(in.nextLine());
   for (int j = 0; j <= n; j++) {
    parent[j] = j;
    size[j] = 1;
   }
   int cur = 0;
   Hashtable<String, Integer> table = new Hashtable<String, Integer>();
   for (int j = 0; j < n; j++) {
    String[] s = in.nextLine().split(" ");
    String a = s[0];
    String b = s[1];
    int x = 0, y = 0;
    if (table.containsKey(a))
     x = table.get(a);
    else {
     x = cur;
     table.put(a, cur);
     cur++;
    }
    if (table.containsKey(b))
     y = table.get(b);
    else {
     y = cur;
     table.put(b, cur);
     cur++;
    }
     union(x, y);
     System.out.println(size[findSet(x)]);
   }
  }
 }
}
